@import url(//hello.myfonts.net/count/2ef52f);article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

audio,
canvas,
video {
  display: inline-block;
}

audio:not([controls]) {
  display: none;
  height: 0;
}

[hidden],
template {
  display: none;
}

html {
  font-family: sans-serif;
  -ms-text-size-adjust: 100%;
  -webkit-text-size-adjust: 100%;
}

body {
  margin: 0;
}

a {
  background: transparent;
}

a:focus {
  outline: thin dotted;
}

a:active,
a:hover {
  outline: 0;
}

h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

abbr[title] {
  border-bottom: 1px dotted;
}

b,
strong,
.strong {
  font-weight: bold;
}

dfn,
em,
.em {
  font-style: italic;
}

hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

p {
  -webkit-hyphens: auto;
  -epub-hyphens: auto;
  -moz-hyphens: auto;
  hyphens: auto;
}

pre {
  margin: 0;
}

code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em;
}

pre {
  white-space: pre-wrap;
}

q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

q:before,
q:after {
  content: '';
  content: none;
}

small,
.small {
  font-size: 75%;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

dl,
menu,
ol,
ul {
  margin: 1em 0;
}

dd {
  margin: 0;
}

menu {
  padding: 0 0 0 40px;
}

ol,
ul {
  padding: 0;
  list-style-type: none;
}

nav ul,
nav ol {
  list-style: none;
  list-style-image: none;
}

img {
  border: 0;
}

svg:not(:root) {
  overflow: hidden;
}

figure {
  margin: 0;
}

fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

legend {
  border: 0;
  padding: 0;
}

button,
input,
select,
textarea {
  font-family: inherit;
  font-size: 100%;
  margin: 0;
}

button,
input {
  line-height: normal;
}

button,
select {
  text-transform: none;
}

button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  cursor: pointer;
}

button[disabled],
html input[disabled] {
  cursor: default;
}

input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  padding: 0;
}

input[type="search"] {
  -webkit-appearance: textfield;
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  box-sizing: content-box;
}

input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

textarea {
  overflow: auto;
  vertical-align: top;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

* {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

.image-replacement,
.ir {
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
}

.clearfix,
.cf {
  zoom: 1;
}

.clearfix:before,
.clearfix:after,
.cf:before,
.cf:after {
  content: "";
  display: table;
}

.clearfix:after,
.cf:after {
  clear: both;
}

span.amp {
  font-family: Baskerville,'Goudy Old Style',Palatino,'Book Antiqua',serif !important;
  font-style: italic;
}

@font-face {
  font-family: 'Haettenschweiler';
  src: url("./../../build/fonts/2EF52F_0_0.eot");
  src: url("./../../build/fonts/2EF52F_0_0.eot") format("embedded-opentype"),url("./../../build/fonts/2EF52F_0_0.woff2") format("woff2"),url("./../../build/fonts/2EF52F_0_0.woff") format("woff"),url("./../../build/fonts/2EF52F_0_0.ttf") format("truetype");
  letter-spacing: 1px;
}

body#tinymce.wp-editor {
  font-family: "adobe-garamond-pro","Times New Roman",Times,serif;
  font-size: 100%;
  line-height: 1.5;
  color: #363738;
  -webkit-font-smoothing: antialiased;
  padding: 1.5em 1.5em 0;
}

body#tinymce.wp-editor a,
body#tinymce.wp-editor a:visited {
  color: #6d6e70;
}

body#tinymce.wp-editor a:link,
body#tinymce.wp-editor a:visited:link {
  -webkit-tap-highlight-color: rgba(0,0,0,0.3);
}

body#tinymce.wp-editor h1,
body#tinymce.wp-editor .h1,
body#tinymce.wp-editor h2,
body#tinymce.wp-editor .h2,
body#tinymce.wp-editor h3,
body#tinymce.wp-editor .h3,
body#tinymce.wp-editor h4,
body#tinymce.wp-editor .h4,
body#tinymce.wp-editor h5,
body#tinymce.wp-editor .h5 {
  text-rendering: optimizelegibility;
  font-weight: 500;
}

body#tinymce.wp-editor h1 a,
body#tinymce.wp-editor .h1 a,
body#tinymce.wp-editor h2 a,
body#tinymce.wp-editor .h2 a,
body#tinymce.wp-editor h3 a,
body#tinymce.wp-editor .h3 a,
body#tinymce.wp-editor h4 a,
body#tinymce.wp-editor .h4 a,
body#tinymce.wp-editor h5 a,
body#tinymce.wp-editor .h5 a {
  text-decoration: none;
}

body#tinymce.wp-editor h1,
body#tinymce.wp-editor .h1 {
  font-size: 2.5em;
  line-height: 1.333em;
}

body#tinymce.wp-editor h2,
body#tinymce.wp-editor .h2 {
  font-size: 1.75em;
  line-height: 1.4em;
  margin-bottom: 0.375em;
}

body#tinymce.wp-editor h3,
body#tinymce.wp-editor .h3 {
  font-size: 1.125em;
}

body#tinymce.wp-editor h4,
body#tinymce.wp-editor .h4 {
  font-size: 1.1em;
  font-weight: 700;
}

body#tinymce.wp-editor h5,
body#tinymce.wp-editor .h5 {
  font-size: 0.846em;
  line-height: 2.09em;
  text-transform: uppercase;
  letter-spacing: 2px;
}

body#tinymce.wp-editor p {
  margin: 0 0 1.5em;
}

body#tinymce.wp-editor table {
  width: 100%;
  border: 1px solid #6d6e70;
  margin-bottom: 1.5em;
}

body#tinymce.wp-editor table caption {
  margin: 0 0 7px;
  font-size: 0.75em;
  color: #9fa6b4;
  text-transform: uppercase;
  letter-spacing: 1px;
}

body#tinymce.wp-editor tr {
  border-bottom: 1px solid #6d6e70;
}

body#tinymce.wp-editor tr:nth-child(even) {
  background-color: #a7a9ab;
}

body#tinymce.wp-editor td {
  padding: 7px;
  border-right: 1px solid #6d6e70;
}

body#tinymce.wp-editor td:last-child {
  border-right: 0;
}

body#tinymce.wp-editor th {
  background-color: #a7a9ab;
  border-bottom: 1px solid #6d6e70;
  border-right: 1px solid #6d6e70;
}

body#tinymce.wp-editor th:last-child {
  border-right: 0;
}

body#tinymce.wp-editor blockquote {
  margin: 0 0 1.5em 0.75em;
  padding: 0 0 0 0.75em;
  border-left: 3px solid #2980b9;
  font-style: italic;
  color: #9fa6b4;
}

body#tinymce.wp-editor dd {
  margin-left: 0;
  font-size: 0.9em;
  color: #787878;
  margin-bottom: 1.5em;
}

body#tinymce.wp-editor img {
  margin: 0 0 1.5em 0;
  max-width: 100%;
  height: auto;
}

body#tinymce.wp-editor img.wp-more-tag {
  height: 16px;
}

body#tinymce.wp-editor .size-auto,
body#tinymce.wp-editor .size-full,
body#tinymce.wp-editor .size-large,
body#tinymce.wp-editor .size-medium,
body#tinymce.wp-editor .size-thumbnail {
  max-width: 100%;
  height: auto;
}

body#tinymce.wp-editor pre {
  background: #000;
  color: #a7a9ab;
  font-size: 0.9em;
  padding: 1.5em;
  margin: 0 0 1.5em;
  border-radius: 3px;
}

@media only screen and (min-width: 481px) {
  body#tinymce.wp-editor .alignleft,
  body#tinymce.wp-editor img.alignleft {
    margin-right: 1.5em;
    display: inline;
    float: left;
  }

  body#tinymce.wp-editor .alignright,
  body#tinymce.wp-editor img.alignright {
    margin-left: 1.5em;
    display: inline;
    float: right;
  }

  body#tinymce.wp-editor .aligncenter,
  body#tinymce.wp-editor img.aligncenter {
    margin-right: auto;
    margin-left: auto;
    display: block;
    clear: both;
  }
}


/*# sourceURL=undefinedC:/htdocs/wms.dev/web/wp-content/themes/teach-it-forward/assets/src/scss/C:/htdocs/wms.dev/web/wp-content/themes/teach-it-forward/assets/src/scss/partials/_normalize.scss */
/*# sourceURL=undefinededitor-style.scss */
/*# sourceURL=undefinedC:/htdocs/wms.dev/web/wp-content/themes/teach-it-forward/assets/src/scss/C:/htdocs/wms.dev/web/wp-content/themes/teach-it-forward/assets/src/scss/partials/_typography.scss */
/*# sourceURL=undefinedC:/htdocs/wms.dev/web/wp-content/themes/teach-it-forward/assets/src/scss/C:/htdocs/wms.dev/web/wp-content/themes/teach-it-forward/assets/src/scss/editor-style.scss */
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */